
- if @article.errors.any?
  #error_explanation
    %h2= "#{pluralize(@article.errors.count, "error")} prohibited this article from being saved:"
    %ul
      - @article.errors.full_messages.each do |msg|
        %li= msg

.container-fluid.scrollable-panel
  .row-fluid
    .col-sm-6
      = form_for @article, :html=>{:multipart => true,:remote=>true} do |f|
        = hidden_field_tag :search, @search
        .field
          -# = hidden_field_tag :search, value: @search
          = f.label "Codice a barre"
          = f.text_field :barcode, class: 'form-control cr-field', id: 'barcode-articles'
        .field
          = f.label "Produttore"
          = text_field_tag :manufacturer, '', data: { autocomplete: autocomplete_company_name_articles_path, value: (@article.manufacturer.nil?? '' : @article.manufacturer.name) }, class: 'form-control autofocus cr-field'
          -# = f.autocomplete_field :manufacturer, autocomplete_company_name_articles_path
          -# %div{'data-target': new_company_path, 'data-name': 'add_company', class: 'btn btn-primary popup-link'}
          -#   +
          -# = f.collection_select(:manufacturer, Company.all, :id, :name, {:include_blank => 'Generico', :selected => @article.getManufacturer}, { :class => 'form-control' })
        .field
          = f.label "Codice produttore"
          = f.text_field :manufacturerCode, class: 'form-control cr-field'
        .field
          = f.label "Articolo"
          = f.text_field :name, class: 'form-control cr-field'
        .field
          = f.label "Articoli equivalenti"
          = text_field_tag "Article[search]", nil, placeholder: 'Cerca originale compatibile', class: 'form-control custom_autocomplete', data: { route: custom_peer_articles_autocomplete_path(field: :original_article), target: 'Article' }
          - @article.equivalent_articles.each do |ea|
            .autocomplete-field.ac-ArticleCompatibility-array-original_article{data: { target: 'Article' }}
              .row.colored
                .col-sm-9
                  = ea.name
                  = hidden_field_tag 'Article[original_article_id[]id]', ea.id, data: { target: 'Article' }, class: 'autocomplete-field ac-Article-array-original_article'
                .col-sm-3
                  = button_tag 'X', onclick: "$(this).parent().parent().remove()", data: { target: 'Article' }, class: 'autocomplete-field ac-Article-array-original_article'
        .field
          = f.label "Descrizione"
          = f.text_field :description, class: 'form-control cr-field'
        .field
          = f.label "Quantit√† contenuta"
          = f.number_field :containedAmount, class: 'form-control cr-field', step: :any
        .field
          = f.select :measure_unit, options_for_select(Article.measure_units,selected: Article.measure_units[@article.measure_unit]), class: 'form-control input-row'
        .field
          = f.label "Riserva minima"
          = f.number_field :minimalReserve, class: 'form-control cr-field', step: :any
        .field
          = f.submit 'Salva', id: "article-submit-back"
          = f.submit 'Salva e passa alle categorie', id: "article-submit"
    .col-sm-6
      .container-fluid
        - unless @article.barcode.nil?
          #barcode-img
            = image_tag(@article.barcode.to_s+'.png')
            %br
            = @article.barcode


    -# .row-fluid
    -#   .col-sm-12
    -#     .field
    -#       = f.submit 'Salva', class: "btn btn-primary", id: "article-submit"

:javascript
  //init();
  domInit();
  activateAF();
  $('#manufacturer').val($('#manufacturer').data('value'));
  activateCustomAutocomplete(function(element){
    return $(element).data();
  });

  //activateClose();
