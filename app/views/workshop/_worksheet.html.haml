- vehicle = @worksheet.vehicle
.row{style: 'margin-top: 1em; margin-bottom: 1em;'}
  .col-sm-9
    %b= "ODL nr. #{@worksheet.number} - #{vehicle.plate} - #{@worksheet.notes}"

  .col-sm-3
    =button_tag 'c', class: 'infobox-button no-loader', data: { target: info_vehicle_checks_path(vehicle.id), name: "infobox_vehicle_checks_#{vehicle.id}" }
    =button_tag 'r', class: 'infobox-button no-loader', data: { target: info_vehicle_spare_items_path(vehicle.id), name: "infobox_vehicle_spare_items_#{vehicle.id}" }
    =button_tag 'i', class: 'infobox-button no-loader', data: { target: info_vehicle_path(vehicle.id), name: "infobox_vehicle_#{vehicle.id}" }
    =button_tag 'o', class: 'infobox-button no-loader', data: { target: info_vehicle_workshop_path(vehicle.id), name: "infobox_vehicle_workshop_#{vehicle.id}" }

.row
  .col-sm-12
    .scrollable-panel{style: 'height: 86%;'}
      .panel-group#accordion{style: 'height: 80%;'}
        - @worksheet.notifications.each do |sgn|
          .panel.panel-default
            .panel-heading
              .row
                .col-sm-8
                  %h4.panel-title
                    %a{ href: "#collapse-#{sgn['Protocollo']}", data: { toggle: 'collapse', parent: '#accordion' }}
                      = "#{sgn['TipoDanno']} - #{sgn['DescrizioneSegnalazione']}"
                .col-sm-2
                  %button{ class: 'btn_small create_popup', id: "deassociate-#{sgn['Protocollo']}", data: { route: deassociate_workshop_notification_path(sgn['Protocollo']), html: (render partial: 'workshop/deassociate_notification_popup', locals: {protocol: sgn['Protocollo'], year: sgn['Anno'], damage_type: sgn['TipoDanno'], description: sgn['DescrizioneSegnalazione'] }) } }
                    = 'Rimanda'
            %div{ class: "panel-collapse collapse#{sgn['Protocollo'] == @protocol ? ' in' : ''}", id: "collapse-#{sgn['Protocollo']}"}
              .panel-body
                = render partial: 'workshop/notification', locals: {sgn: sgn}

        .panel.panel-default
          .panel-heading
            %h4.panel-title
              %a{ href: "#collapse-checks", data: { toggle: 'collapse', parent: '#accordion' }}
                = "CONTROLLI"
          %div{ class: "panel-collapse collapse#{@protocol == 'checks' ? ' in' : ''}", id: "collapse-checks"}
            .panel-body
              - @worksheet.check_operations.each do |wo|
                .row.colored
                  .col-sm-1
                    -# = button_to "-", delete_workshop_operation_path(id: @worksheet.number, operation: wo.id), remote: true, data: { confirmation: "Elminare l'operazione nr. #{wo.id}, #{wo.name}?" }
                    -# - if i > 0
                    -#   = form_tag( delete_workshop_operation_path(@worksheet.number), remote: true, method: :post, class: 'no-cr', data: { confirmation: "Elminare l'operazione nr. #{wo.id}, #{wo.name}?" }) do |f|
                    -#     = hidden_field_tag :protocol, @protocol
                    -#     = hidden_field_tag :operation, wo.id
                    -#     = submit_tag "-", class: 'no-cr btn-small', data: {alt: 'Elimina operazione'}

                  .col-sm-7
                    = "#{wo.name}#{wo.user.nil?? '' : " (#{wo.user.person.list_name})"}"
                    = " - #{wo.notes}" unless wo.notes.nil?
                  .col-sm-1
                    - if wo.user == current_user
                      - if wo.paused
                        %button{ class: 'btn_small timer_control start_timer', id: "start-#{wo.id}", data: { route: [start_workshop_operation_path(@worksheet.number),pause_workshop_operation_path(@worksheet.number)], protocol: 'checks', description: 'Controlli' } }
                          = wo.real_duration.to_i > 0 ? 'Riprendi' : 'Inizia'
                      - else
                        %button{ class: 'btn_small timer_control pause_timer', id: "start-#{wo.id}", data: { route: [start_workshop_operation_path(@worksheet.number),pause_workshop_operation_path(@worksheet.number)], protocol: 'checks', description: 'Controlli' } }
                          = 'Pausa'
                    - elsif WorkshopOperation.where(myofficina_reference: wo.myofficina_reference, name: wo.name, user: current_user).count == 0
                      %button{ class: 'btn_small timer_control start_timer', id: "start-#{wo.id}", data: { route: [start_workshop_operation_path(@worksheet.number),pause_workshop_operation_path(@worksheet.number)], protocol: 'checks', description: 'Controlli' } }
                        = 'Inizia'
                  .col-sm-1.timer{'data-time': wo.real_duration.to_i, 'data-paused': wo.paused.to_s, id: "timer-#{wo.id}"}
                    = wo.real_duration_label
                  .col-sm-1
                    - if wo.user == current_user || current_user.has_role?('amministratore officina')  || current_user.has_role?('admin')
                      %button{ class: 'stop_timer create_popup no-loader', id: "stop-#{wo.id}", data: { checks: 'true', new_elements: ["#worksheet-duration-op-#{wo.id}","#timesend-#{wo.id}"], popup_id: 'close_operation', html: (render partial: 'workshop/close_operation_popup', locals: {protocol: @worksheet.number, time: wo.real_duration.to_i, id: wo.id, tm: @worksheet.real_duration.to_i}) }, disabled: !wo.ending_time.nil? }
                        Concludi
              %ul.nav.nav-tabs
                - @checks.each do |k,v|
                  -# %style
                  -#   a:visited,a:link,a:hver,a:active{ color: black; font-style: normal; font-size: +2; }
                  - unperformed = v.reject{ |cc| cc.performed? }.size
                  - if @tab.nil?
                    - if v == @checks.values.first
                      - active = 'active'
                    - else
                      - active = ''
                  - else
                    - if @tab == 'tab-'+k.tr(' ','_')
                      - active = 'active'
                    - else
                      - active = ''
                  %li{ class: active}
                    =link_to "#{k}#{unperformed > 0 ? " (#{unperformed})" : ''}", '#tab-'+k.tr(' ','_'), data: { toggle: 'tab'}, class: 'no-loader'

              .col-sm-3
                %b= "Controllo"
              .col-sm-3
                %b= "Ultimo valore"
              .col-sm-2
                %b= "Lettura"
              .col-sm-2
                %b= "Eseguito"
              .col-sm-2
                %b= "Note"

            .row
              .col-sm-12
                .tab-content
                  - @checks.each do |k,v|
                    - if @tab.nil?
                      - if v == @checks.values.first
                        - active = 'active'
                      - else
                        - active = ''
                    - else
                      - if @tab == 'tab-'+k.tr(' ','_')
                        - active = 'active'
                      - else
                        - active = ''

                    -#
                    -# - if v == @checks.values.first
                    -#   - active = ' active'
                    -# - else
                    -#   - active = ''
                    %div{style: 'margin-left: 1em; width: 99%;', id: 'tab-'+k.tr(' ','_'), class: 'tab-pane '+active}
                      .scrollable-panel#scroll-element
                        = render partial: 'carwash/check_view', locals: {list: v}

    - if Time.now - vehicle.last_gps.to_i > 7.days
      .overlay-screen
        .overlay-content
          = form_tag( update_vehicle_mileage_path, remote: true, method: :post, format: :js) do |f|
            = number_field_tag :mileage, nil, class: 'form-control', placeholder: 'Inserire Km!'
            = hidden_field_tag :vehicle_id, vehicle.id
            = hidden_field_tag :vehicle_class, vehicle.class
            = hidden_field_tag :worksheet, @worksheet.id
            = submit_tag 'Ok'

.row
  .col-sm-2
    -# = button_to 'Pausa scheda', worksheets_path, method: :get, class: 'loading_screen'
    -# = form_tag(save_worksheet_path(@worksheet.id), method: :post, remote: true, class: 'no-cr') do |f|
    -#   = hidden_field_tag :time, @worksheet.real_duration.to_i
    -#   = submit_tag 'Chiudi scheda', class: 'no-cr loading_screen'
    %button{ class: 'btn_small stop-worksheet loading_screen', id: "pause-worksheet", data: { route: save_worksheet_path(@worksheet.number), station: @station, action: :pause } }
      = 'Pausa scheda'
  .col-sm-2
    #clock{'data-clock': DateTime.now.hour*3600+DateTime.now.minute*60+DateTime.now.second}
      = "#{DateTime.now.strftime('%d/%m/%Y %H:%M:%S')}"
  .col-sm-2
    -# = form_tag(save_worksheet_path(@worksheet.id), method: :post, remote: true, class: 'no-cr') do |f|
    -#   = hidden_field_tag :time, @worksheet.real_duration.to_i
    -#   = submit_tag 'Chiudi scheda', class: 'no-cr loading_screen'
    - if current_user.has_role?('amministratore officina') || current_user.has_role?('admin')
      -# %button{ class: 'btn_small stop-worksheet', id: "stop-worksheet", data: { route: save_worksheet_path(@worksheet.number), action: :stop } }
      %button{ class: 'btn_small stop-worksheet create_popup no-loader', id: "stop-worksheet", data: { popup_id: 'close_worksheet', html: (render partial: 'workshop/close_worksheet_popup', locals: {protocol: @worksheet.number, station: @station}) } }
        = 'Chiudi scheda'
  .col-sm-2
    = hidden_field_tag :odl, @worksheet.number
    %button{ class: 'create_popup no-loader', data: { popup_id: 'new_notification', html: (render partial: 'workshop/notification_popup', locals: {protocol: @worksheet.number,station: @station}) } }
      Nuova segnalazione
  .col-sm-3

    = select_tag :add_sgn, options_for_select(EurowinController::get_open_notifications_complete(vehicle,@worksheet.number).map{ |sgn| ["#{sgn['SchedaInterventoProtocollo'].nil? ? 'Nuova' : "ODL: #{sgn['SchedaInterventoProtocollo']}"} - #{sgn['DescrizioneSegnalazione']}",sgn.to_json]}), include_blank: 'Altre segnalazioni attive', class: 'form-control submitting-select ajax_update', id: 'add-sgn-select', data: {target: add_sgn_to_worksheet_path(@worksheet.number), method: :post, station: @station}

:javascript

  var active_timers = {};

  var timer;

  $.each($('.timer'),function(){

    if(!$(this).data('paused')){
      start_timer(/\w*-(\d*)/.exec($(this).attr('id'))[1]);
    }

  });

  function start_timer(id){
    var protocol = $("#start-"+id).data('protocol');
    active_timers[id] = $('#timer-'+id).data('time');
  }

  function check_disabled_close(){

    $('#stop-worksheet').prop('disabled',false);
    $.each($('.stop_timer'),function(){
      if(!$(this).prop('disabled') && !$(this).data('checks')){
        $('#stop-worksheet').prop('disabled',true);
        return;
      }
    });
  }

  var active_timer = null;
  var active_notification = null;
  check_disabled_close();
  leave_page_message = 'Uscire dalla scheda?';
  window.onbeforeunload = before_leave_event;

  $('submit, button').on('click',function(){
    activateLoadingScreen();
    clearInterval(timer);
  });

  $('.stop-worksheet').on('click',function(){
    if($(this).attr('id') == 'stop-worksheet'){
      // if(!confirm('Chiudere la scheda?')){
      //   deactivateLoadingScreen();
      //   return;
      // } else {
      //   window.onbeforeunload = null;
      // }
    }

    if($(this).attr('id') == 'pause-worksheet'){
      window.onbeforeunload = null;
    }


    var route = $(this).data('route');
    var operation_times = [];
    var action = $(this).data('action');
    var station = $(this).data('station');
    $.each($('.timer'),function(){
      var id = /timer-(\d*)/.exec($(this).attr('id'))[1];
      if( id == active_notification){
        operation_times.push({id: id, time: active_timer});
      } else {
        operation_times.push({id: id, time: $(this).data('time')});
      }
    });
    var data = { worksheet_duration: tm, operation_times: JSON.stringify(operation_times), perform: action, station: station };
    if($(this).attr('id') == 'pause-worksheet'){
      $.ajax({
        url: route,
        method: 'post',
        data: data
      });
    }


  });

  $('.timer_control').on('click',function(){

    var id = /start-(\d*)/.exec($(this).attr('id'))[1];
    var protocol = $(this).data('protocol');
    var description = $(this).data('description');

    if($(this).hasClass('start_timer')){

      if(!(active_notification === null)){
        var route = $('#start-'+active_notification).data('route')[1];
        var data = { operation: active_notification, time: active_timer, worksheet_duration: tm, description: description };
        $.ajax({
          url: route,
          method: 'post',
          data: data
        });
        $('#timer-'+active_notification).data('time',active_timer);
        $('#start-'+active_notification).html('Riprendi');
        $('#start-'+active_notification).removeClass('pause_timer');
        $('#start-'+active_notification).addClass('start_timer');
      }

      active_timer = $('#timer-'+id).data('time');
      active_notification = id;
      $(this).html('Pausa');
      $(this).removeClass('start_timer');
      $(this).addClass('pause_timer');
      $('#stop-'+id).attr('disabled',false);
      check_disabled_close();

      var route = $(this).data('route')[0];
      var data = { operation: id, time: active_timer, worksheet_duration: tm, protocol: protocol, description: description };
      $.ajax({
        url: route,
        method: 'post',
        data: data
      });

    } else if($(this).hasClass('pause_timer')){

      var route = $(this).data('route')[1];
      var data = { operation: id, time: active_timer, worksheet_duration: tm, protocol: protocol, description: description };
      $.ajax({
        url: route,
        method: 'post',
        data: data
      });
      $('#timer-'+id).data('time',active_timer);
      active_timer = null;
      active_notification = null;
      $(this).html('Riprendi');
      $(this).removeClass('pause_timer');
      $(this).addClass('start_timer');

    }

  });

  var load = null;
  $('.stop_timer').on('click',function(){
    // if(confirm('Chiudere la segnalazione?')){
      var id = /stop-(\d*)/.exec($(this).attr('id'))[1];
      var route = $(this).data('route');
      if(active_timer === null){
        var time = parseInt($('#timer-'+id).data('time'));
      } else {
        var time = active_timer;
      }

      // $('input#worksheet-duration-op-'+id).val(tm);
      // $('input#timesend-'+id).val(parseInt($('#timer-'+id).data('time')));
      setTimeout(function(){
        new_elements['#worksheet-duration-op-'+id].val(tm);
        new_elements['#timesend-'+id].val(time);
        // $(document).filter('#worksheet-duration-op-'+id).val(tm);
        // $(document).filter('#timesend-'+id).val(time);
      },1000);

      // var data = { operation: id, time: time, worksheet_duration: tm, protocol: $(this).data('protocol') };
      // $.ajax({
      //   url: route,
      //   method: 'post',
      //   data: data
      // });
    // } else {
    //   deactivateLoadingScreen();
    // }
  });

  deactivateLoadingScreen();

  var station = $('input[name=station]').val();
  var tm = parseInt($('#timer').data('time'));
  var ck = parseInt($('#clock').data('clock'));
  clearInterval(timer);
  timer = setInterval(function(){
    $.each(active_timers,function(k,v){
      active_timers[k]++;
      $('#timer-'+k).data('time',v);
      $("#timer-"+k).html(seconds_to_clock(v));
    });
    if(ck%15 == 0 && $('.overlay-screen').length == 0 ){
      var protocol = /collapse-(checks|\d*)/.exec($('.in').attr('id'));
      if(protocol != null){
        protocol = protocol[1]
      }
      if ($('.popup').length < 1 && protocol != 'checks'){
        $.ajax({
          url: '/worksheet/'+$('input[name=odl]').val()+'/update_operation_time',
          method: 'post',
          data: {protocol: protocol, station: station}
        });
      }
    }
    tm++;
    ck++;
    $('[data-additional]').data('additional',tm);
    $('input[name=time]').val(tm);
    $('#timer').html('Tempo: '+seconds_to_clock(tm));
    dt = new Date();
    day = dt.getDate() > 9 ? dt.getDate() : "0"+dt.getDate();
    month = (dt.getMonth()+1) > 9 ? (dt.getMonth()+1) : "0"+(dt.getMonth()+1);
    year = dt.getFullYear();
    $('#clock').html(day+'/'+month+'/'+year+' '+seconds_to_clock(ck));
  },1000);
