-# - vehicles = VehicleCheck.vehicles(@checks,@dismissed).sort_by { |v| v.plate }
-# - checks = VehicleCheck.last_checks(@checks) unless @checks.nil?
-# - @ordering = {'plate': false, 'operator': false, 'date': false, 'value': false, 'result': false, 'notes': false} if @ordering.nil?
-# = hidden_field_tag :ordering, @ordering.to_json
-# - @order = 'plate' if @order.nil?
-# = hidden_field_tag :order, @order
.row
  .col-sm-12
    %b= @check.label unless @check.nil?
    -# = @ordering.inspect
.row
  .col-sm-1.ordering_cell.hover-hilight{data: {ordering_id: 'plate', type: 'string', ordering: @ordering.to_json}}
    = "Targa (#{@vehicles.count})"
  .col-sm-2.ordering_cell.hover-hilight{data: {ordering_id: 'operator', type: 'string', ordering: @ordering.to_json}}
    = "Operatore"
  .col-sm-1.ordering_cell.hover-hilight#def_order{data: {ordering_id: 'date', type: 'date', ordering: @ordering.to_json}}
    = "Data"
  .col-sm-1.ordering_cell.hover-hilight{data: {ordering_id: 'km', type: 'integer', ordering: @ordering.to_json}}
    = "Km"
  .col-sm-1.ordering_cell.hover-hilight{data: {ordering_id: 'actual_km', type: 'integer', ordering: @ordering.to_json}}
    = "Km attuali"
  .col-sm-1.ordering_cell.hover-hilight{data: {ordering_id: 'value', type: 'string', ordering: @ordering.to_json}}
    = "Valore"
  .col-sm-2.ordering_cell.hover-hilight{data: {ordering_id: 'result', type: 'string', ordering: @ordering.to_json}}
    = "Risultato"
  .col-sm-2.ordering_cell.hover-hilight{data: {ordering_id: 'notes', type: 'string', ordering: @ordering.to_json}}
    = "Note"

.scrollable-panel#ordering_box
  - @vehicles.each do |v|
    .loadable{id: "lc#{v.id}", data: {v: v.id, loading: 'true'}}
      -# Caricamento..
      - p_check = v.last_check(@all ? nil : @checks.first)
      .row.colored{style: v.dismissed ? 'color: #f00; ' : ''}
        -# - if @all
        -#   - check = p_check.nil? ? nil : p_check.vehicle_check
        -#   -# - cs = p_check.nil? ? nil : p_check.vehicle_check_session
        -#   .row{style: 'padding-left: 2em; padding-right: 2em;'}
        -#     .col-sm-12{style: 'color: #309'}
        -#       %b= check.label unless check.nil?
        -# .row{style: 'padding-left: 2em; padding-right: 2em;'}
        .col-sm-1.ordered_cell{data: {ordering_id: 'plate', type: 'string'}}
          %b= @all ? v.plate_number : v.plate
        .col-sm-2.ordered_cell{data: {ordering_id: 'operator', type: 'string'}}
          - unless p_check.nil?
            -# -if p_check.operator.nil?
            -#   = p_check.user
            -# -else
            -#   = p_check.operator.list_name
            = p_check.operators_name
            - if p_check.km.nil? && !p_check.worksheet.nil?
              - p_check.update(km: p_check.worksheet.mileage)
        .col-sm-1.ordered_cell{data: {ordering_id: 'date', type: 'date'}}
          = p_check.time.strftime("%d/%m/%Y") unless p_check.nil?
          -# = cs.finished.strftime("%d/%m/%Y") unless cs.nil? || cs.finished.nil?
        .col-sm-1.ordered_cell{data: {ordering_id: 'km', type: 'integer'}, style: 'text-align: right;'}

          = number_with_delimiter(p_check.km, delimiter: ".", separator: ",") unless p_check.nil?
        .col-sm-1.ordered_cell{data: {ordering_id: 'actual_km', type: 'integer'}, style: 'text-align: right;'}
          = number_with_delimiter(v.mileage, delimiter: ".", separator: ",") unless p_check.nil?
        .col-sm-1.ordered_cell{data: {ordering_id: 'value', type: 'string'}}
          = "#{p_check.value}#{p_check.vehicle_check.measure_unit}" unless p_check.nil?
        .col-sm-2.ordered_cell{data: {ordering_id: 'result', type: 'string'}}
          %b= VehiclePerformedCheck.fixvalues.key(p_check.performed) unless p_check.nil?
        .col-sm-2.ordered_cell{data: {ordering_id: 'notes', type: 'string'}}
          -if @all
            %b= p_check.vehicle_check.label unless p_check.nil?
          = p_check.notes unless p_check.nil?


:javascript

  $('#def_order').trigger('click');
  // $.each($('.loadable'),function(){
  //   var element = '#'+$(this).attr('id');
  //   console.log(element,$(element).children('.row').length);
  //   if($(element).children('.row').length == 0){
  //     loadrow(element);
  //
  //   }
  // });
