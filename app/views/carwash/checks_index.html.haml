%div{ style: 'padding-top: 1em'}
  -# %ul.nav.nav-tabs
  -#   -# %style
  -#   -#   a:visited,a:link,a:hover,a:active{ color: black; font-style: normal; font-size: +2; }
  -#   %li.active
  -#     =link_to 'Controlli e manutenzione:', '#tab-checks', data: { toggle: 'tab'}, class: 'no-loader'
  -#   - if current_user.has_role?('amministratore officina') || current_user.has_role?(:admin)
  -#     %li
  -#       =link_to 'Gestione', '#tab-checks-management', data: { toggle: 'tab'}, class: 'no-loader'

.tab-content
  .tab-pane#tab-checks.active{style: 'height:100%;'}
    .container-fluid
      .row{style: 'margin-bottom: 1em;'}
        = form_tag(start_check_session_path, method: :post, remote: true) do |f|
          .col-sm-3
            = text_field_tag 'check_session[vehicle]', nil, placeholder: 'Targa..', class: 'form-control custom_autocomplete', data: { route: custom_vehicle_external_vehicle_autocomplete_path, target: 'VehicleCheckSession' }
            = hidden_field_tag 'check_session[vehicle_id]', nil, data: { target: 'VehicleCheckSession' }, class: 'autocomplete-field ac-VehicleCheckSession-vehicle'
            = hidden_field_tag 'check_session[vehicle_table]', nil, data: { target: 'VehicleCheckSession' }, class: 'autocomplete-field ac-VehicleCheckSession-vehicle'
            = hidden_field_tag 'VehicleCheckSession[station]', 'carwash'
          .col-sm-2
            = submit_tag 'Inizia controlli', class: 'form-control'
          -# = render partial: 'carwash/checks'
      .row
        .col-sm-1
        .col-sm-2
          %b='ODL'
        .col-sm-1
        .col-sm-1
          %b='Targa'
        .col-sm-2
          %b='Controlli'
        .col-sm-2
          %b='Inizio'
        .col-sm-2
          %b='Fine'
      .row
        .col-sm-12
          .scrollable-panel
            - @check_sessions.each do |cs|
              .row.colored
                .col-sm-1
                  - if current_user.has_role?('amministratore lavaggio') || current_user.has_role?(:admin)
                    = button_to 'X', delete_check_session_path(cs.id), remote: true, 'data-confirm': "Eliminare la sessione nr. #{cs.myofficina_reference} e tutti i controlli relativi?", class: 'loading_screen'
                .col-sm-2
                  %b= 'Sessione: '+cs.myofficina_reference.to_s
                  %br
                  = 'Segnalazioni: '+cs.vehicle_performed_checks.reject{ |vc| vc.myofficina_odl_reference.nil? }.map{ |vc| vc.myofficina_odl_reference }.uniq.join(",")
                .col-sm-1
                  - if current_user.has_role?('amministratore lavaggio') || current_user.has_role?(:admin) || cs.finished.nil?
                    = form_tag(continue_check_session_path(cs.id), method: :post, remote: true) do |f|
                      = submit_tag (cs.finished.nil?? 'Continua' : 'Riapri'), 'data-confirm': "#{cs.finished.nil?? 'Continuare' : 'Riprendere'} la sessione nr. #{cs.id}?", class: 'loading_screen'
                .col-sm-1
                  = cs.vehicle.plate
                .col-sm-2
                  = "#{cs.vehicle_performed_checks.performed.size}/#{cs.vehicle_performed_checks.size} eseguiti."
                  - if cs.vehicle_performed_checks.fixed.size > 0
                    %br
                    = "#{cs.vehicle_performed_checks.fixed.size} aggiustati"
                  -  if cs.vehicle_performed_checks.unfixed.size > 0
                    %br
                    = "#{cs.vehicle_performed_checks.unfixed.size} non a posto"
                  -  if cs.vehicle_performed_checks.blocking.size > 0
                    %br
                    = "#{cs.vehicle_performed_checks.blocking.size} bloccanti"
                .col-sm-2
                  = cs.created_at.strftime "%d/%m/%Y\n%H:%M:%S" unless cs.created_at.nil?
                .col-sm-2
                  = cs.finished.strftime "%d/%m/%Y\n%H:%M:%S" unless cs.finished.nil?

  - if current_user.has_role?('amministratore lavaggio') || current_user.has_role?(:admin)
    .tab-pane#tab-checks-management
      .container-fluid
        Gestione

:javascript

  deactivateLoadingScreen();
  activateCustomAutocomplete(function(element){
    return $(element).data();
  });
